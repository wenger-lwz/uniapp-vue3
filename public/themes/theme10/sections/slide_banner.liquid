{% assign is_auto_play= section.settings.is_auto_play %}
{% assign delay= section.settings.delay %}
{% assign title_color= section.settings.title_color %}
{% assign text_color= section.settings.text_color %}
<style>@charset "UTF-8";
/* slide_banner卡片 start */
.slide-banner__hidden {
  position: absolute;
  overflow: hidden;
  width: 0;
  height: 0; }

/* Icons */
.slide-banner__icon {
  display: block;
  width: 1.5em;
  height: 1.5em;
  margin: 0 auto;
  fill: currentColor; }

.slide-banner__main {
  position: relative;
  width: 100%; }

.slide-banner-show {
  position: relative;
  width: 100%; }

.slide-banner {
  width: 100%;
  height: 100vh;
  top: 0;
  left: 0;
  position: absolute;
  overflow-x: hidden;
  opacity: 0;
  line-height: 1.5; }

.slide--current {
  opacity: 1;
  z-index: 90 !important;
  position: relative; }

.slide-banner__wrap {
  width: 100%;
  height: 100vh;
  overflow: hidden;
  position: relative; }

.slide-banner__img {
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  position: absolute;
  background-color: #fff; }
  .slide-banner__img img,
  .slide-banner__img video {
    object-fit: cover;
    object-position: center top; }

.slide-banner__title-wrap {
  padding-right: 15px;
  padding-left: 15px;
  padding-top: 135px;
  text-align: center;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0; }
  @media (min-width: 576px) {
    .slide-banner__title-wrap {
      padding-left: calc((100% - 540px) / 2);
      padding-right: calc((100% - 540px) / 2); } }
  @media (min-width: 768px) {
    .slide-banner__title-wrap {
      padding-left: calc((100% - 720px) / 2);
      padding-right: calc((100% - 720px) / 2); } }
  @media (min-width: 992px) {
    .slide-banner__title-wrap {
      padding-left: calc((100% - 960px) / 2);
      padding-right: calc((100% - 960px) / 2); } }
  @media (min-width: 1200px) {
    .slide-banner__title-wrap {
      padding-left: calc((100% - 1080px) / 2);
      padding-right: calc((100% - 1080px) / 2); } }

.slide-banner__title {
  margin: 0;
  font-size: 34px;
  line-height: 1;
  width: 100%; }

.slide-banner__title span {
  display: inline-block; }

.slide-banner__subtitle {
  margin: 20px 0 30px 0;
  font-size: 18px;
  font-weight: normal; }

.slide-banner__btn {
  padding: 10px 30px;
  text-decoration: unset;
  max-width: 300px; }

.slide-banner-boxnav {
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  z-index: 92;
  width: 100%;
  background: #fff; }

.boxnav__item {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 0;
  height: 4rem;
  flex: 1;
  background: #fff; }

.boxnav__item--prev:hover,
.boxnav__item--next:hover {
  color: #858585;
  cursor: pointer; }

.boxnav__item:focus {
  outline: none; }

.boxnav__label {
  padding: 0 0.5rem;
  font-size: 1.15rem;
  position: relative; }

.boxnav__label--total::before {
  content: '';
  position: absolute;
  right: 100%;
  top: 0;
  width: 2px;
  height: 1.45rem;
  background: #000;
  transform: rotate(22.5deg); }

.icon--caret-rot {
  transform: rotate(180deg); }

@media (min-width: 768px) {
  .slide-banner-show {
    overflow: hidden;
    margin: 0;
    height: 100vh; }
  .slide-banner {
    height: 100vh; }
  .slide-banner__title-wrap {
    padding-top: 180px;
    text-align: left; }
  .slide-banner__title {
    font-size: 64px;
    max-width: 1080px; }
  .slide-banner__subtitle {
    width: 300px; }
  .slide-banner__btn {
    position: absolute !important; }
  .slide-banner__wrap {
    height: 100%;
    position: absolute; }
  .slide-banner__img {
    background-position: 50% 0%; }
  .slide-banner-boxnav {
    left: auto;
    right: 50vw;
    width: auto;
    transform: translateX(50%); }
  .boxnav__item {
    width: 10vw;
    height: 12vw;
    flex: none; } }

.placeholder-background {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }
  .placeholder-background .icon {
    border: 0; }

.placeholder-svg {
  display: block;
  fill: rgba(109, 109, 109, 0.35);
  background-color: rgba(109, 109, 109, 0.1);
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  border: 1px solid rgba(109, 109, 109, 0.2); }

/* slide_banner卡片 end */
</style>
<style>
  [data-section-id='{{section.id}}'] .slide-banner__title {
    color: {{ title_color }};
  }

  [data-section-id='{{section.id}}'] .slide-banner__subtitle {
    color: {{ text_color }};
  }
</style>

<div class="slide-banner__wrapper">
  <svg class="slide-banner__hidden">
    <symbol id="icon-caret" viewBox="0 0 16 24">
      <title>caret</title>
      <path d="M15.45 2.8L12.65 0l-12 12 12 12 2.8-2.8-9.2-9.2z"/>
    </symbol>
  </svg>
  <main class="slide-banner__main">
    <div class="slide-banner-show">
      {% for block in section.blocks %}
        <div class="slide-banner{% if forloop.first %} slide--current{% endif %}">
          <div class="slide-banner__wrap">
            <div class="slide-banner__img d-none d-md-block lazyload">
              {% if block.settings.src != ''  %}
                <img
                  src="{{shop.default_img}}"
                  class="lazyload w-100 h-100"
                  data-src="{{block.settings.src | img_url: '{width}x'}}"
                  data-sizes="auto"
                  alt="{{ block.settings.alt | escape }}"
                />
              {% else %}
                <div class="placeholder-background">
                  {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
                </div>
              {% endif %}
              <div class="placeholder-background" style="background: rgba(0, 0, 0, {{ block.settings.opacity | divided_by: 100.0 }})"></div>
            </div>
            {% comment %} 移动端图片 -- start {% endcomment %}
            {% assign mobile_src = block.settings.mobile_src | default: block.settings.src %}
            <div class="slide-banner__img d-md-none lazyload">
              {% if mobile_src != '' %}
                <img
                  src="{{shop.default_img}}"
                  class="lazyload w-100 h-100"
                  data-src="{{mobile_src| img_url: '{width}x'}}"
                  data-sizes="auto"
                  alt="{{ images[mobile_src].alt | escape }}"
                />
              {% else %}
                <div class="placeholder-background">
                  {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
                </div>
              {% endif %}
              <div class="placeholder-background" style="background: rgba(0, 0, 0, {{ block.settings.opacity | divided_by: 100.0 }})"></div>
            </div>
            {% comment %} 移动端图片 -- end {% endcomment %}
            <div class="slide-banner__title-wrap">
              {% if block.settings.title != '' %}
                <h3 class="slide-banner__title text-truncate xf_skin_title_font_family">{{ block.settings.title }}</h3>
              {% endif %}
              {% if block.settings.text != '' %}
                <h4 class="slide-banner__subtitle">{{ block.settings.text }}</h4>
              {% endif %}
              {% if block.settings.button_label != '' and block.settings.button_link.url != '' %}
                <a class="btn btn-primary slide-banner__btn text-truncate" href="{{ block.settings.button_link.url }}"
                  {% unless block.settings.button_link.type != 'web' or block.settings.button_link.url contains shop.domain %} target="_blank"{% endunless %}
                >
                  {{ block.settings.button_label | escape }}
                </a>
              {% endif %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
    <nav class="slide-banner-boxnav xf_skin_title_font_family{% unless section.blocks.size > 1 %} d-none{% endunless %}">
      <button class="boxnav__item boxnav__item--prev">
        <svg class="slide-banner__icon icon--caret">
          <use xlink:href="#icon-caret"></use>
        </svg>
      </button>
      <div class="boxnav__item boxnav__item--label">
        <span class="boxnav__label boxnav__label--current">1</span>
        <span class="boxnav__label boxnav__label--total"></span>
      </div>
      <button class="boxnav__item boxnav__item--next">
        <svg class="slide-banner__icon icon--caret-rot">
          <use xlink:href="#icon-caret"></use>
        </svg>
      </button>
    </nav>
  </main>
</div>

{% schema %}
{
  "name": "slide_banner",
  "max_blocks": 10,
  "settings": [
    {
      "type": "header",
      "content": {
        "en-US": "Settings",
        "zh-CN": "设置"
      }
    },
    {
      "type": "checkbox",
      "label": {
        "en-US": "Auto-change slides",
        "zh-CN": "自动轮播"
      },
      "id": "is_auto_play",
      "default": false
    },
    {
      "type": "select",
      "id": "delay",
      "label": {
        "en-US": "Change images every",
        "zh-CN": "轮播时间"
      },
      "default": "5000",
      "options": [
        {
          "value": "2000",
          "label": {
            "en-US": "2s",
            "zh-CN": "2秒"
          }
        },
        {
          "value": "3000",
          "label": {
            "en-US": "3s",
            "zh-CN": "3秒"
          }
        },
        {
          "value": "5000",
          "label": {
            "en-US": "5s",
            "zh-CN": "5秒"
          }
        }
      ]
    },
    {
      "type": "color",
      "id": "title_color",
      "label": {
        "en-US": "Heading",
        "zh-CN": "标题"
      },
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": {
        "en-US": "Description text",
        "zh-CN": "描述文案"
      },
      "default": "#000000"
    },
    {
      "type": "header",
      "content": {
        "en-US": "Content",
        "zh-CN": "内容"
      }
    }
  ],
  "blocks": [
    {
      "type": "banner",
      "name": {
        "en-US": "Banner ads image",
        "zh-CN": "banner广告图"
      },
      "settings": [
        {
          "type": "image_picker",
          "id": "src",
          "label": {
            "en-US": "Desktop image",
            "zh-CN": "PC端图片"
          },
          "info": {
            "en-US": "Recommended resolution (width * height): 1920*1080px",
            "zh-CN": "建议尺寸（宽*高）：1920*1080px"
          }
        },
        {
          "type": "image_picker",
          "id": "mobile_src",
          "label": {
            "en-US": "Mobile image",
            "zh-CN": "移动端图片"
          },
          "info": {
            "en-US": "Recommended resolution (width * height): 750*1280px",
            "zh-CN": "建议尺寸（宽*高）：750*1280px"
          }
        },
        {
          "type": "range",
          "id": "opacity",
          "step": 1,
          "max": 100,
          "min": 0,
          "label": {
            "en-US": "Opacity",
            "zh-CN": "蒙层不透明度"
          },
          "default": 25,
          "unit": "%"
        },
        {
          "type": "text",
          "id": "title",
          "label": {
            "en-US": "Heading",
            "zh-CN": "标题"
          },
          "default": "Hero Banner",
          "placeholder": {
            "en-US": "Input title",
            "zh-CN": "输入标题"
          }
        },
        {
          "type": "richtext",
          "id": "text",
          "label": {
            "en-US": "Descriptions",
            "zh-CN": "描述"
          },
          "default": "Use this text to share information about your brand with your customers.",
          "placeholder": {
            "en-US": "Input descriptions",
            "zh-CN": "输入描述"
          }
        },
        {
          "type": "text",
          "id": "button_label",
          "label": {
            "en-US": "Button text",
            "zh-CN": "按钮文字"
          },
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": {
            "en-US": "Button link",
            "zh-CN": "按钮链接"
          },
          "default": ""
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "slide_banner",
      "cname": {
        "en-US": "Simple carousel",
        "zh-CN": "简约轮播"
      },
      "category": {
        "en-US": "Material",
        "zh-CN": "素材"
      },
      "ccategory": {
        "en-US": "Material",
        "zh-CN": "素材"
      },
      "icon": "/themes/theme1/assets/image/sedgfh34545.svg",
      "display": true,
      "blocks": [
        {
          "type": "banner",
          "name": {
            "en-US": "Banner ads image",
            "zh-CN": "banner广告图"
          },
          "settings": {
            "src": "",
            "mobile_src": "",
            "opacity": 25,
            "title": "Hero Banner",
            "text": "Use this text to share information about your brand with your customers.",
            "button_label": "Shop Now",
            "button_link": ""
          }
        },
        {
          "type": "banner",
          "name": {
            "en-US": "Banner ads image",
            "zh-CN": "banner广告图"
          },
          "settings": {
            "src": "",
            "mobile_src": "",
            "opacity": 25,
            "title": "Hero Banner",
            "text": "Use this text to share information about your brand with your customers.",
            "button_label": "Shop Now",
            "button_link": ""
          }
        },
        {
          "type": "banner",
          "name": {
            "en-US": "Banner ads image",
            "zh-CN": "banner广告图"
          },
          "settings": {
            "src": "",
            "mobile_src": "",
            "opacity": 25,
            "title": "Hero Banner",
            "text": "Use this text to share information about your brand with your customers.",
            "button_label": "Shop Now",
            "button_link": ""
          }
        }
      ]
    }
  ]
}
{% endschema %}
{--% use-- 'CSSPlugin.min.js' ---%--}
{--% use-- 'TweenLite.min.js' ---%--}

{% javascript %}
  if (!window.jQuery) {
    setTimeout(function(){
      sa&&sa.track('trackError', {verifyPosition: 'slide_banner', jqVersion: 'null'});
    }, 3000);
  }

  $(function() {
    $.position_slide_banner = function (params) {
      var $slide = $('[data-section-id=' + params.id + ']');
      $(window).on('resize', function () {
        $(document).trigger('slide__banner_update');
        updateTransform();
      });
      var updateTransform = function () {
        if ($($slide.prevAll('.shoplaza-section')[0]).find('.header_plus').length > 0) {
          // 上一个卡片是header2,需要位移
          var height = $('#shoplaza-section-header_plus').outerHeight() + $('.plugin__fixed-div').outerHeight() + $('.plugin__static-div').outerHeight() - $('.fast-bar').outerHeight();
          var fastbarHeight = $('.fast-bar').height();
          $slide.find('.slide-banner__wrapper').css({
            marginTop: '-' + (height + fastbarHeight) + 'px'
          })
        } else {
          $slide.find('.slide-banner__wrapper').css({
            marginTop: 0
          })
        }
      }
      $(document).on('slide__banner_update', $.throttle(updateTransform));
      $(window).trigger('resize');
    }
    $.card_slide_banner = function(params) {
      //pollyfill 方法
      function _instanceof(left, right) {
        if(right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]){
          return right[Symbol.hasInstance](left);
        } else {
          return left instanceof right;
        }
      }
      function _classCallCheck(instance, Constructor) {
        if (!_instanceof(instance, Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _defineProperties(target, props) {
        for(var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps); return Constructor;
      }
      (function() {
        // The Slide (Product) class.
        var Slide = function () {
          function Slide(el) {
            _classCallCheck(this, Slide);
            this.DOM = {
              el: el
            }; // The slide´s container.
            this.DOM.wrap = this.DOM.el.querySelector(".slide-banner__wrap"); // The image element.
            this.DOM.img = this.DOM.wrap.querySelector(".slide-banner__img"); // The title container.
            this.DOM.titleWrap = this.DOM.wrap.querySelector(".slide-banner__title-wrap"); // Some config values.
            this.config = {
              animation: {
                duration: 1.2,
                ease: "Power4.easeInOut"
              }
            };
          } // Sets the current class.
          _createClass(Slide, [{
            key: "setCurrent",
            value: function setCurrent() {
              var isCurrent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
              this.DOM.el.classList[isCurrent ? "add" : "remove"]("slide--current");
            } // Hide the slide.
          }, {
            key: "hide",
            value: function hide(direction, duration) {
              return this.toggle("hide", direction, duration);
            } // Show the slide.
          }, {
            key: "show",
            value: function show(direction, duration) {
              this.DOM.el.style.zIndex = 92;
              return this.toggle("show", direction, duration);
            } // Show/Hide the slide.
          }, {
            key: "toggle",
            value: function toggle(action, direction, duration) {
              var _this = this;
              return new Promise(function (resolve, reject) {
                // When showing a slide, the slide´s container will move 100% from the right or left depending on the direction.
                // At the same time, both title wrap and the image will move the other way around thus creating the unreveal effect.
                // Also, when showing or hiding a slide, we scale it from or to a value of 1.1.
                if (action === "show") {
                  TweenLite && TweenLite.to(_this.DOM.wrap, duration ? duration : _this.config.animation.duration, {
                    ease: _this.config.animation.ease,
                    startAt: {
                      x: direction === "right" ? "100%" : "-100%"
                    },
                    x: "0%"
                  });
                  TweenLite && TweenLite.to(_this.DOM.titleWrap, duration ? duration : _this.config.animation.duration, {
                    ease: _this.config.animation.ease,
                    startAt: {
                      x: direction === "right" ? "-100%" : "100%"
                    },
                    x: "0%"
                  });
                }
                TweenLite && TweenLite.to(_this.DOM.img, duration ? duration : _this.config.animation.duration, {
                  ease: _this.config.animation.ease,
                  startAt: action === "hide" ? {} : {
                    x: direction === "right" ? "-100%" : "100%",
                    scale: 1.1
                  },
                  x: "0%",
                  scale: action === "hide" ? 1.1 : 1,
                  onStart: function onStart() {
                    _this.DOM.img.style.transformOrigin = action === "hide" ? direction === "right" ? "100% 50%" : "0% 50%" : direction === "right" ? "0% 50%" : "100% 50%";
                    _this.DOM.el.style.opacity = 1;
                  },
                  onComplete: function onComplete() {
                    _this.DOM.el.style.zIndex = 89;
                    _this.DOM.el.style.opacity = action === "hide" ? 0 : 1;
                    resolve();
                  }
                });
              });
            }
          }]);
          return Slide;
        }(); // The navigation class. Controls the .boxnav animations (e.g. pagination animation).

        var Navigation = function () {
          function Navigation(el, settings) {
            _classCallCheck(this, Navigation);
            this.DOM = {
              el: el
            };
            this.settings = {
              next: function next() {
                return false;
              },
              prev: function prev() {
                return false;
              }
            };
            Object.assign(this.settings, settings); // Navigation controls (prev and next)
            this.DOM.prevCtrl = this.DOM.el.querySelector(".boxnav__item--prev");
            this.DOM.nextCtrl = this.DOM.el.querySelector(".boxnav__item--next"); // The current and total pages elements.
            this.DOM.pagination = {
              current: this.DOM.el.querySelector(".boxnav__label--current"),
              total: this.DOM.el.querySelector(".boxnav__label--total")
            };
            this.initEvents();
          } // Updates the current page element value.
          // Animate the element up, update the value and finally animate it in from bottom up.
          _createClass(Navigation, [{
            key: "setCurrent",
            value: function setCurrent(val, direction, duration) {
              var _this2 = this;
              //this.DOM.pagination.current.innerHTML = val;
              TweenLite && TweenLite.to(this.DOM.pagination.current, duration ? 1/3 * duration : 0.4, {
                ease: "Power4.easeIn",
                y: direction === "right" ? "-100%" : "100%",
                opacity: 0,
                onComplete: function onComplete() {
                  _this2.DOM.pagination.current.innerHTML = val;
                  TweenLite && TweenLite.to(_this2.DOM.pagination.current, duration ? 2/3 * duration : 0.8, {
                    ease: "Power4.easeOut",
                    startAt: {
                      y: direction === "right" ? "50%" : "-50%",
                      opacity: 0
                    },
                    y: "0%",
                    opacity: 1
                  });
                }
              });
            } // Sets the total pages value.
          }, {
            key: "setTotal",
            value: function setTotal(val) {
              this.DOM.pagination.total.innerHTML = val;
            } // Initialize the events on the next/prev controls.
          }, {
            key: "initEvents",
            value: function initEvents() {
              var _this3 = this;
              this.DOM.prevCtrl.addEventListener("click", function () {
                return _this3.settings.prev();
              });
              this.DOM.nextCtrl.addEventListener("click", function () {
                return _this3.settings.next();
              });
            }
          }]);
          return Navigation;
        }(); // The Slideshow class.
        var Slideshow = function () {
          function Slideshow(el) {
            var _this4 = this;
            _classCallCheck(this, Slideshow);
            this.DOM = {
              el: el
            };// Initialize the navigation instance. When clicking the next or prev ctrl buttons, trigger the navigate function.
            this.navigation = new Navigation(document.querySelector('[data-section-id="' + params.id + '"] .slide-banner-boxnav'), {
              next: function next() {
                return _this4.navigate("right");
              },
              prev: function prev() {
                return _this4.navigate("left");
              }
            }); // The slides.
            this.slides = []; // Initialize/Create the slides instances.
            Array.from(this.DOM.el.querySelectorAll(".slide-banner")).forEach(function (slideEl) {
              return _this4.slides.push(new Slide(slideEl));
            }); // The total number of slides.
            this.slidesTotal = this.slides.length; // Set the total number of slides in the navigation box.
            this.navigation.setTotal(this.slidesTotal); // At least 2 slides to continue...
            if (this.slidesTotal < 2) {
              return false;
            } // Current slide position.
            this.current = 0; // Initialize the slideshow.
            this.init();
          } // Set the current slide and initialize some events.
          _createClass(Slideshow, [{
            key: "init",
            value: function init() {
              var _this5 = this;
              this.slides[this.current].setCurrent();
              // 在自动轮播时传入duration
              clearInterval(window.slideBannerTimer)
              if(params.is_auto_play) {
                window.slideBannerTimer = setInterval(function (e) {
                  _this5.navigate("right", params.duration);
                }, params.delay);
              }
            } // Navigate the slideshow.
          }, {
            key: "navigate",
            value: function navigate(direction, duration) {
              var _this6 = this;
              // If animating return.
              if (this.isAnimating) return;
              this.isAnimating = true; // The next/prev slide´s position.
              var nextSlidePos = direction === "right" ? this.current < this.slidesTotal - 1 ? this.current + 1 : 0 : this.current > 0 ? this.current - 1 : this.slidesTotal - 1; // Update the current page element.
              this.navigation.setCurrent(nextSlidePos + 1, direction, duration);
              Promise.all([this.slides[this.current].hide(direction, duration), this.slides[nextSlidePos].show(direction, duration)]).then(function () {
                // Update current.
                _this6.slides[_this6.current].setCurrent(false);
                _this6.current = nextSlidePos;
                _this6.slides[_this6.current].setCurrent();
                _this6.isAnimating = false;
              });
            }
          }]);
          return Slideshow;
        }(); // Initialize the slideshow
        new Slideshow(document.querySelector('[data-section-id="' + params.id + '"] .slide-banner-show'));
      })();
    }
    $.position_slide_banner && $.position_slide_banner({
      id: "{{ section.id }}"
    });
    $.card_slide_banner && $.card_slide_banner({
      id: "{{ section.id }}",
      is_auto_play: {{ is_auto_play }},
      delay: {{ delay }}
    });
  });
{% endjavascript %}
